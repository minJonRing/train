{"version":3,"file":"static/js/845.22a18610.chunk.js","mappings":"4TAiGA,EA9EmB,SAAH,GAAsC,IAAhCA,EAAI,EAAJA,KAIpB,GAJiC,EAAPC,QAAkB,EAATC,WAElBC,EAAAA,EAAAA,OAEMC,EAAAA,EAAAA,OAIvB,GAJc,EAANC,OAAU,EAAFC,IAIUC,EAAAA,EAAAA,UAAS,KAAG,eAA/BC,EAAK,KAAEC,EAAQ,KAGtB,GAAwCF,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CG,EAAY,KAAEC,EAAe,KAGpC,GAA4BJ,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAjCK,EAAM,KAAEC,EAAS,KAGxB,GAA8CN,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAnDO,EAAe,KAAEC,EAAkB,KAGpCC,EAA2B,SAACC,EAAGX,GACnC,IAAMY,EAAIR,EAAaJ,GACvBY,GAAKH,EAAmBG,EAC1B,EAcA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAIpB,EAAKA,KAEPqB,EAAsCD,EAAtCC,aAER,GAF8CD,EAAxBE,UAAwBF,EAAbG,UAEiBC,EAAAA,EAAAA,GAAYH,IAAtDI,EAAS,EAATA,UAAWC,EAAW,EAAXA,YAAaC,EAAa,EAAbA,cAChClB,EAASgB,GACTd,EAAgBgB,GAChBd,EAAUa,EACZ,GAAG,CAAC1B,KAGF,SAAC4B,EAAA,EAAG,CAACC,GAAI,CAAEC,EAAG,EAAGC,OAAQ,QAAS,UAChC,UAACC,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGL,GAAI,CAAEE,OAAQ,oBAAqB,WAC7D,UAACC,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,GAAI,CAAEE,OAAQ,QAAS,WAEtD,SAACQ,EAAA,EAAI,CAACC,QAAQ,WAAWX,GAAI,CAAEY,aAAc,QAAS,UACpD,SAACC,EAAA,EAAW,CAACb,GAAI,CAAEc,QAAS,qBAAsB,UAChD,SAACC,EAAA,EAAU,CACTC,cAAY,EACZL,QAAQ,KACRX,GAAI,CAAEY,aAAc,EAAGK,WAAY,QAAS,SAC7C,8CAML,SAAC,IAAI,CACHC,MAAI,EACJvC,MAAOA,EACPI,OAAQA,EACRG,mBAAoBC,QAGxB,SAACgB,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,GAAI,CAAEE,OAAQ,QAAS,SAErDjB,GACC,SAAC,IAAI,CACHN,MAAOA,EACPM,gBAAiBA,EACjBC,mBAAoBC,EACpBJ,OAAQA,EACRmC,MAAI,IAEJ,WAKd,ECjFA,EAVc,WAEZ,IAAQzC,GAAOF,EAAAA,EAAAA,MAAPE,GACR,GAA4B0C,EAAAA,EAAAA,IAAyB,CACnDC,UAAW,CAAE3C,GAAAA,GACb4C,UAAW,IAFLlD,EAAI,EAAJA,KAIR,OAJuB,EAATmD,UAIK,MAAO,SAAC,EAAU,CAACJ,MAAI,EAAC/C,KAAMA,GACnD,C","sources":["modules/answer/read.jsx","modules/exam/answer/index.jsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport Base from \"./base\";\nimport Navs from \"./navs\";\nimport Countdown from \"./countdown\";\nimport { NoticeRef } from \"utils/Notice\";\n// import { useExamPaperDetail } from \"services/useHooks\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { ajax } from \"request/index\";\nimport { isArray } from \"lodash\";\nimport { createPaper } from \"./hooks/index\";\nconst AnswerRead = ({ data, saveUrl, submitUrl }) => {\n  // 路由\n  const navigate = useNavigate();\n  // 考试id 试卷id\n  const { examId, id } = useParams();\n  // 获取的试卷id\n\n  // 试卷\n  const [paper, setPaper] = useState([]);\n\n  // 题目的枚举数据\n  const [questionEnum, setQuestionEnum] = useState({});\n\n  // 提交的答案\n  const [answer, setAnswer] = useState({});\n\n  // 当前题目\n  const [currentQuestion, setCurrentQuestion] = useState({});\n\n  // 设置当前问题内容\n  const handleSetCurrentQuestion = (e, id) => {\n    const q = questionEnum[id];\n    q && setCurrentQuestion(q);\n  };\n\n  // 初始化页面信息\n  useEffect(() => {\n    const d = data.data;\n    // 题目 试卷类型 答题时间（单位/分钟）\n    const { questionList, paperType, duration } = d;\n    // 设置初始题目-答案信息\n    const { initPaper, initAnswers, initTopicEnum } = createPaper(questionList);\n    setPaper(initPaper);\n    setQuestionEnum(initTopicEnum);\n    setAnswer(initAnswers);\n  }, [data]);\n\n  return (\n    <Box sx={{ p: 1, height: \"100%\" }}>\n      <Grid container spacing={1} sx={{ height: \"calc(100% + 8px)\" }}>\n        <Grid item xs={12} sm={4} md={4} sx={{ height: \"100%\" }}>\n          {/* 倒计时 */}\n          <Card variant=\"outlined\" sx={{ marginBottom: \"12px\" }}>\n            <CardContent sx={{ padding: \"0 12px !important\" }}>\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                sx={{ marginBottom: 0, lineHeight: \"60px\" }}\n              >\n                试卷答案查看\n              </Typography>\n            </CardContent>\n          </Card>\n          {/* 菜单 */}\n          <Navs\n            read\n            paper={paper}\n            answer={answer}\n            setCurrentQuestion={handleSetCurrentQuestion}\n          />\n        </Grid>\n        <Grid item xs={12} sm={8} md={8} sx={{ height: \"100%\" }}>\n          {/* 答题页面 */}\n          {currentQuestion ? (\n            <Base\n              paper={paper}\n              currentQuestion={currentQuestion}\n              setCurrentQuestion={handleSetCurrentQuestion}\n              answer={answer}\n              read\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default AnswerRead;\n","import * as React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useExamPaperAnswerDetail } from \"services/useHooks\";\nimport AnswerRead from \"modules/answer/read\";\nconst Paper = () => {\n  // 考试id 试卷id\n  const { id } = useParams();\n  const { data, isLoading } = useExamPaperAnswerDetail({\n    variables: { id },\n    cacheTime: 0,\n  });\n  return isLoading ? null : <AnswerRead read data={data} />;\n};\n\nexport default Paper;\n"],"names":["data","saveUrl","submitUrl","useNavigate","useParams","examId","id","useState","paper","setPaper","questionEnum","setQuestionEnum","answer","setAnswer","currentQuestion","setCurrentQuestion","handleSetCurrentQuestion","e","q","useEffect","d","questionList","paperType","duration","createPaper","initPaper","initAnswers","initTopicEnum","Box","sx","p","height","Grid","container","spacing","item","xs","sm","md","Card","variant","marginBottom","CardContent","padding","Typography","gutterBottom","lineHeight","read","useExamPaperAnswerDetail","variables","cacheTime","isLoading"],"sourceRoot":""}