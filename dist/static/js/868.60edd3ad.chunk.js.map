{"version":3,"file":"static/js/868.60edd3ad.chunk.js","mappings":"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","sources":["modules/answer/index.jsx","modules/exam/paper/index.jsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Grid,\n  Skeleton,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport Base from \"./base\";\nimport Navs from \"./navs\";\nimport Countdown from \"./countdown\";\nimport { NoticeRef } from \"utils/Notice\";\n// import { useExamPaperDetail } from \"services/useHooks\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { ajax } from \"request/index\";\nimport { isArray } from \"lodash\";\nimport { createPaper } from \"./hooks/index\";\nconst Answer = ({ data, saveUrl, submitUrl }) => {\n  // 路由\n  const navigate = useNavigate();\n  // 考试id 试卷id\n  const { examId, id } = useParams();\n  // 获取的试卷id\n  // 剩余考试时间\n  const [countdown, setCountdown] = useState(0);\n\n  // 试卷\n  const [paper, setPaper] = useState([]);\n\n  // 当前题目\n  const [currentQuestion, setCurrentQuestion] = useState({});\n\n  // 题目的枚举数据\n  const [questionEnum, setQuestionEnum] = useState({});\n\n  // 提交的答案\n  const [answer, setAnswer] = useState({});\n\n  // 菜单默认展开项\n  const [defaultExpanded, setDefaultExpanded] = useState([]);\n  const [defaultSelected, setDefaultSelected] = useState([]);\n\n  // 设置当前问题内容\n  const handleSetCurrentQuestion = (e, id) => {\n    const q = questionEnum[id];\n    if (q) {\n      const { _expanded, _selected } = q;\n      setDefaultExpanded(_expanded);\n      setDefaultSelected(_selected);\n    }\n    q && setCurrentQuestion(q);\n  };\n\n  // 设置当前问题答案 q题目id s答案\n  const handleSetCurrentAnswer = (q, s) => {\n    let a = { ...answer };\n    // 有答案天假 无答案删除\n    if (s.length) {\n      a = {\n        ...a,\n        [q]: isArray(s) ? s : [s],\n      };\n    } else {\n      delete a[q];\n    }\n    // to do  提交答案\n    setAnswer(a);\n  };\n\n  // 初始化页面信息\n  useEffect(() => {\n    const d = data.data;\n    // 题目 试卷类型 答题时间（单位/分钟）\n    const { questionList, paperType, duration } = d;\n    // 判断该考卷是否作答\n    if (true) {\n      setCountdown(duration * 60);\n      // 设置初始题目-答案信息\n      const { initPaper, initAnswers, initTopicEnum } =\n        createPaper(questionList);\n      setPaper(initPaper);\n      setAnswer(initAnswers);\n      setQuestionEnum(initTopicEnum);\n    } else {\n      NoticeRef.current.open({\n        message: \"您已答完该试卷！\",\n        type: \"warning\",\n      });\n      setTimeout(() => {\n        navigate(-1);\n      }, 1000);\n    }\n  }, [data]);\n\n  // 返回提交按钮是否可以提交\n  const isSubmitCompute = () => {\n    const pl = Object.keys(questionEnum).length;\n    const al = Object.keys(answer).length;\n    return {\n      isSubmit: pl && al && pl === al,\n    };\n  };\n\n  // 监听答案数据改变 并执行提交请求\n  useEffect(() => {\n    const { isSubmit } = isSubmitCompute();\n    if (isSubmit) {\n      setConfirm(true);\n    } else {\n      setConfirm(false);\n    }\n  }, [answer]);\n\n  // 提交\n  const [confirm, setConfirm] = useState(false);\n\n  const handleSubmit = () => {\n    const answerList = [];\n    for (let key in answer) {\n      answerList.push({\n        questionId: key,\n        answerList: answer[key],\n      });\n    }\n    ajax({\n      url: submitUrl,\n      method: \"post\",\n      data: {\n        examId,\n        paperId: id,\n        answerList,\n        duration: countdown,\n      },\n    }).then((res) => {\n      // console.log(res);\n    });\n  };\n  return (\n    <Box sx={{ p: 1, height: \"100%\" }}>\n      <Grid container spacing={1} sx={{ height: \"calc(100% + 8px)\" }}>\n        <Grid item xs={12} sm={4} md={4} sx={{ height: \"100%\" }}>\n          {/* 倒计时 */}\n          <Card variant=\"outlined\" sx={{ marginBottom: \"12px\" }}>\n            <CardContent sx={{ padding: \"0 12px !important\" }}>\n              {countdown ? <Countdown countdown={countdown} /> : null}\n            </CardContent>\n          </Card>\n          {/* 菜单 */}\n          <Navs\n            paper={paper}\n            answer={answer}\n            setCurrentQuestion={handleSetCurrentQuestion}\n            expanded={defaultExpanded}\n            selected={defaultSelected}\n            setDefaultExpanded={setDefaultExpanded}\n          />\n          {/* 提交按钮 */}\n          <Button\n            onClick={handleSubmit}\n            variant=\"contained\"\n            fullWidth\n            disabled={!confirm}\n            sx={{ marginTop: \"12px\" }}\n          >\n            {confirm ? \"提交试卷\" : \"还有题目未作答\"}\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={8} md={8} sx={{ height: \"100%\" }}>\n          {/* 答题页面 */}\n          <Base\n            currentQuestion={currentQuestion}\n            setCurrentQuestion={handleSetCurrentQuestion}\n            handleSetCurrentAnswer={handleSetCurrentAnswer}\n            answer={answer}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Answer;\n","import * as React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useExamPaperDetail } from \"services/useHooks\";\nimport Answer from \"modules/answer/index\";\nconst Paper = () => {\n  // 考试id 试卷id\n  const { id } = useParams();\n  const { data, isLoading } = useExamPaperDetail({\n    variables: { id },\n    cacheTime: 0,\n  });\n  return isLoading ? null : (\n    <Answer data={data} submitUrl={\"/exam/personnel/paper/mock\"} />\n  );\n};\n\nexport default Paper;\n"],"names":["data","submitUrl","saveUrl","useNavigate","useParams","examId","id","useState","countdown","setCountdown","paper","setPaper","currentQuestion","setCurrentQuestion","questionEnum","setQuestionEnum","answer","setAnswer","defaultExpanded","setDefaultExpanded","defaultSelected","setDefaultSelected","handleSetCurrentQuestion","e","q","_expanded","_selected","useEffect","d","questionList","duration","paperType","createPaper","initPaper","initAnswers","initTopicEnum","isSubmit","pl","Object","keys","length","al","isSubmitCompute","setConfirm","confirm","Box","sx","p","height","Grid","container","spacing","item","xs","sm","md","Card","variant","marginBottom","CardContent","padding","expanded","selected","Button","onClick","answerList","key","push","questionId","ajax","url","method","paperId","then","res","fullWidth","disabled","marginTop","handleSetCurrentAnswer","s","a","isArray","useExamPaperDetail","variables","cacheTime","isLoading"],"sourceRoot":""}