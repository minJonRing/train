{"version":3,"file":"static/js/762.afe6df76.chunk.js","mappings":"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","sources":["modules/answer/base.jsx","modules/answer/countdown.jsx","modules/answer/hooks/index.js","modules/answer/navs.jsx","request/request.js","request/index.js","services/index.js","request/create-query.js","services/useHooks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  FormControl,\n  FormGroup,\n  Checkbox,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Button,\n} from \"@mui/material\";\n\nconst Answer = ({\n  currentQuestion,\n  setCurrentQuestion,\n  handleSetCurrentAnswer,\n  answer,\n  read,\n}) => {\n  const {\n    questionId,\n    no,\n    label,\n    examQuestionTypeResponse,\n    questionItemList,\n    answers,\n    prevId,\n    nextId,\n  } = currentQuestion;\n  // 初始id\n  const [initId, setInitId] = useState(null);\n  // 更新后的id\n  const [reId, setReId] = useState(null);\n\n  // 当前答题目答案\n  const [currentAnswer, setCurrentAnswer] = useState([]);\n\n  // 设置答案\n  const handleChange = (e, i, check) => {\n    const { value } = e.target;\n    const v = +value;\n    if (check) {\n      const _answer = [...currentAnswer];\n      if (i) {\n        _answer.push(v);\n      } else {\n        const _i = _answer.indexOf(v);\n        if (_i !== -1) {\n          _answer.splice(_i, 1);\n        }\n      }\n      setCurrentAnswer(_answer);\n    } else {\n      setCurrentAnswer([v]);\n    }\n  };\n\n  // 返回选中状态\n  const returnChecked = (id) => {\n    return answer[questionId] ? answer[questionId].includes(id) : false;\n  };\n\n  // 监听题目改变 重置答案为空[]\n  useEffect(() => {\n    // 设置当前题目选择选中状态\n    setReId(questionId);\n    const a = answer[questionId] || [];\n    setCurrentAnswer(a);\n    // 空格下一题\n    const downKey = (e) => {\n      const c = currentQuestion;\n      if (e.keyCode === 32 && c.nextId) {\n        setCurrentQuestion(e, c.nextId);\n      }\n    };\n    document.addEventListener(\"keydown\", downKey);\n    return () => {\n      document.removeEventListener(\"keydown\", downKey);\n    };\n  }, [currentQuestion]);\n\n  // 监听答案的更改并更新全局答案 initID reId 来区分是来自当前题目答案的改变  还是  变换题目答案的改变\n  useEffect(() => {\n    if (initId && reId && initId === reId) {\n      handleSetCurrentAnswer &&\n        handleSetCurrentAnswer(questionId, currentAnswer);\n    } else {\n      setInitId(reId);\n    }\n  }, [currentAnswer]);\n\n  return (\n    <Box sx={{ position: \"relative\" }}>\n      {!!Object.keys(currentQuestion).length ? (\n        <>\n          <Box>\n            <Box sx={{ padding: \"0 12px\" }}>\n              <Typography gutterBottom variant=\"h5\">\n                第{no}题\n              </Typography>\n              <Typography gutterBottom variant=\"h6\">\n                {label}\n              </Typography>\n            </Box>\n            <FormControl sx={{ padding: \"0 24px\" }}>\n              {[1, 2].includes(examQuestionTypeResponse?.type) ? (\n                <RadioGroup onChange={handleChange}>\n                  {questionItemList?.map((el) => {\n                    return (\n                      <FormControlLabel\n                        key={el.id}\n                        control={\n                          <Radio\n                            value={el.id}\n                            checked={returnChecked(el.id)}\n                            disabled={read}\n                          />\n                        }\n                        label={el.content}\n                      />\n                    );\n                  })}\n                </RadioGroup>\n              ) : (\n                <FormGroup>\n                  {questionItemList?.map((el) => {\n                    return (\n                      <FormControlLabel\n                        key={el.id}\n                        control={\n                          <Checkbox\n                            value={el.id}\n                            onChange={(e, i) => handleChange(e, i, true)}\n                            checked={returnChecked(el.id)}\n                            disabled={read}\n                          />\n                        }\n                        label={el.content}\n                      />\n                    );\n                  })}\n                </FormGroup>\n              )}\n            </FormControl>\n            <Box\n              sx={{\n                position: \"absolute\",\n                width: \"100%\",\n                top: read ? \"520px\" : \"400px\",\n              }}\n            >\n              <Button\n                variant=\"text\"\n                sx={{ width: \"200px\" }}\n                disabled={!prevId}\n                onClick={(e) => setCurrentQuestion(e, prevId)}\n              >\n                上一题\n              </Button>\n              <Button\n                variant=\"text\"\n                sx={{ width: \"200px\" }}\n                disabled={!nextId}\n                onClick={(e) => setCurrentQuestion(e, nextId)}\n              >\n                下一题\n              </Button>\n            </Box>\n          </Box>\n          {/* 查看答案时显示正确答案 */}\n          {read ? (\n            <Box>\n              <Typography\n                variant=\"h6\"\n                color=\"primary\"\n                sx={{ padding: \"0 12px\" }}\n              >\n                正确答案\n              </Typography>\n              <Box sx={{ padding: \"0 24px\" }}>\n                {questionItemList\n                  ?.filter(({ id }) => {\n                    return answers.includes(id);\n                  })\n                  .map(({ id, content }) => {\n                    return (\n                      <Typography variant=\"subtitle1\" color=\"primary\" key={id}>\n                        {content}\n                      </Typography>\n                    );\n                  })}\n              </Box>\n            </Box>\n          ) : null}\n        </>\n      ) : null}\n    </Box>\n  );\n};\nexport default Answer;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\n\nconst Countdown = ({ countdown }) => {\n  // 初始时间\n  const [initTime, setInitTime] = useState(countdown);\n  // 当前时间\n  const [time, setTime] = useState(\"\");\n  // 初始时间改改变;\n  useEffect(() => {\n    const h = Math.floor(initTime / 3600);\n    const m = Math.floor(initTime / 60) % 60;\n    const s = initTime % 60;\n    setTime(\n      `${h > 9 ? h : \"0\" + h}:${m > 9 ? m : \"0\" + m}:${s > 9 ? s : \"0\" + s}`\n    );\n    if (initTime > 0) {\n      const T = initTime - 1;\n      setTimeout(() => {\n        setInitTime(T);\n      }, 1000);\n    }\n  }, [initTime]);\n  return (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Typography\n        gutterBottom\n        variant=\"h6\"\n        sx={{ marginBottom: 0, lineHeight: \"60px\" }}\n      >\n        离本次考试结束：\n      </Typography>\n      <Typography sx={{ color: \"red\", fontSize: \"20px\" }}>{time}</Typography>\n    </Box>\n  );\n};\nexport default Countdown;\n","// 创建试卷\nexport const createPaper = (data) => {\n  // 定义试卷集合\n  const paper = [];\n  // 正在作答试卷的已选择的答案\n  const initAnswers = {};\n  // 题目的类型\n  const paperIndex = {};\n  // 循环题目数据\n  for (let el of data) {\n    // examQuestionTypeResponse - 题目类型\n    const {\n      examQuestionTypeResponse: { type },\n    } = el;\n    // 生成试卷的题目大类，paperIndex对应类型的索引数据\n    if (!paperIndex[type] && paperIndex[type] !== 0) {\n      paperIndex[type] = paper.length;\n      paper.push({\n        value: type,\n        label: {\n          1: \"判断题\",\n          2: \"单选题\",\n          3: \"多选题\",\n          4: \"综合题\",\n        }[type],\n        children: [],\n      });\n    }\n  }\n  // 生成关联问题\n  const topic = createTopic(data, initAnswers);\n  // 把试卷题目分类成 单选 多选等类型\n  for (let i in topic) {\n    const el = topic[i];\n    const {\n      examQuestionTypeResponse: { type },\n    } = el;\n    paper[paperIndex[type]].children.push(el);\n  }\n  // 给题目新增子题目id数组几个字段\n  const initPaper = createChildIds(paper);\n  // 题目枚举信息\n  const initTopicEnum = createTopicEnum(initPaper);\n  // 设置试卷\n  return {\n    initPaper,\n    initAnswers,\n    initTopicEnum,\n  };\n};\n\nconst createTopic = (data, initAnswers, no) => {\n  return data.map((i, index) => {\n    const { questionId, selected, content, subQuestionList } = i;\n    if (!!selected && selected.length) {\n      initAnswers[questionId] = selected;\n    }\n    // 题目编号\n    const number = `${no ? no + \"-\" : \"\"}${index + 1}`;\n    return {\n      ...i,\n      value: i.questionId,\n      label: number + \"：\" + content,\n      no: number,\n      children: subQuestionList\n        ? createTopic(subQuestionList, initAnswers, index + 1)\n        : null,\n    };\n  });\n};\n\n// 生成各大题下 子题的id集合\nconst createChildIds = (data, _expanded = []) => {\n  return data.map((el) => {\n    const { children } = el;\n    const _selected = [..._expanded, el.value + \"\"];\n    return {\n      ...el,\n      questionIds: children ? returnChildIds(children) : null,\n      _expanded,\n      _selected,\n      children: children ? createChildIds(children, _selected) : null,\n    };\n  });\n};\n\n// 返回该题目下子题的id集合\nconst returnChildIds = (data, ids = []) => {\n  data.map(({ value, children }) => {\n    if (children) {\n      returnChildIds(children, ids);\n    } else {\n      ids.push(value);\n    }\n  });\n  return ids;\n};\n\n// 题目枚举数据-用于切换题目\nconst createTopicEnum = (data) => {\n  const list = flatPaper(data);\n  const json = {};\n  for (let i in list) {\n    const el = list[i];\n    const { questionId } = el;\n    const prev = list[i - 1];\n    const next = list[+i + 1];\n    const obj = {\n      ...el,\n      prevId: prev ? prev.questionId : \"\",\n      nextId: next ? next.questionId : \"\",\n    };\n    json[questionId] = obj;\n  }\n  return json;\n};\n\n// 试卷数据一维数组\nconst flatPaper = (child, list = []) => {\n  for (let el of child) {\n    const { children } = el;\n    if (children) {\n      flatPaper(children, list);\n    } else {\n      list.push(el);\n    }\n  }\n  return list;\n};\n","import React, { useState } from \"react\";\nimport { Box, Card, CardContent, Typography, Chip } from \"@mui/material\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport { isEqual } from \"lodash\";\nimport TreeItem from \"@mui/lab/TreeItem\";\nconst Navs = ({\n  read,\n  paper,\n  answer,\n  setCurrentQuestion,\n  selected = [],\n  expanded = [],\n  setDefaultExpanded,\n}) => {\n  console.log(1);\n  // 返回当前大模块已经作答的题目\n  const amount = (data) => {\n    const keys = Object.keys(answer).map((key) => +key);\n    return data.filter((id) => keys.includes(id)).length;\n  };\n  // 返回当前题目作答是否正确\n  const right = (data) => {\n    const { answers, selected } = data;\n    const _a = (answers || []).sort((a, b) => a - b);\n    const _s = (selected || []).sort((a, b) => a - b);\n    return isEqual(_a, _s);\n  };\n  // 生成菜单数据\n  const create = (data) => {\n    return data.map((el) => (\n      <TreeItem\n        nodeId={el.value + \"\"}\n        label={\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              p: \"3px 0\",\n            }}\n          >\n            {/* 题目 */}\n            <Typography>{el.no ? `第${el.no}题` : el.label}</Typography>\n            {/* 是否作答 */}\n            {read ? null : el.questionIds ? (\n              <Chip\n                label={\n                  \"已作答：\" +\n                  amount(el.questionIds) +\n                  \"/\" +\n                  el.questionIds.length\n                }\n                variant=\"outlined\"\n                color=\"success\"\n                size=\"small\"\n              />\n            ) : null}\n            {/* 现已题目是否回答正确 */}\n            {answer[el.questionId] ? (\n              read ? (\n                <Chip\n                  label={right(el) ? \"正确\" : \"错误\"}\n                  variant=\"outlined\"\n                  color={right(el) ? \"success\" : \"error\"}\n                  size=\"small\"\n                />\n              ) : (\n                <Chip\n                  label={\"已作答\"}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              )\n            ) : null}\n          </Box>\n        }\n        sx={{\n          \"& .MuiTreeItem-label\": {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n        key={el.value}\n      >\n        {el.children ? create(el.children) : null}\n      </TreeItem>\n    ));\n  };\n\n  const onNodeToggle = (e, nodeId) => {\n    console.log(e, nodeId);\n    setDefaultExpanded && setDefaultExpanded(nodeId);\n  };\n  return (\n    <Box sx={{ height: read ? \"calc(100% - 72px)\" : \"calc(100% - 120px)\" }}>\n      <Card variant=\"outlined\" sx={{ height: \"100%\", overflow: \"auto\" }}>\n        <CardContent>\n          <TreeView\n            id=\"value\"\n            aria-label=\"file system navigator\"\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            onNodeSelect={setCurrentQuestion}\n            selected={selected}\n            expanded={expanded}\n            onNodeToggle={onNodeToggle}\n          >\n            {create(paper)}\n          </TreeView>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\nexport default Navs;\n","import axios from \"axios\";\nimport { store } from \"store/index\";\nimport { NoticeRef } from \"utils/Notice\";\n// create an axios instance\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL, // url = base url + request url\n  // baseURL: \"http://org.ohras.cn/learning/api\", // url = base url + request url\n\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 6000000000, // request timeout\n});\n\n// request interceptor\nservice.interceptors.request.use(\n  (config) => {\n    // do something before request is sent\n    if (!!store.user.token) {\n      config.headers[\"token\"] = store.user.token;\n    }\n    return config;\n  },\n  (error) => {\n    // do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// response interceptor\nservice.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    const { size, msg, status } = res;\n\n    if (size) {\n      return res;\n    }\n\n    if (![200].includes(status)) {\n      NoticeRef?.current?.open({\n        message: msg || \"网络波动,请联系管理员!\",\n        type: \"error\",\n      });\n      if ([401].includes(status)) {\n        console.log(NoticeRef);\n        NoticeRef?.current?.logout();\n      }\n      return res;\n    } else {\n      return res;\n    }\n  },\n  (error) => {\n    // 网络\n    return Promise.reject(error);\n  }\n);\n\nexport default service;\n","import service from \"./request\";\nimport { useState } from \"react\";\n\nexport const ajax = (option = {}) => {\n  const _option = {\n    method: \"get\",\n    responseType: \"json\",\n    ...option,\n  };\n  const { method, data } = _option;\n  if ([\"get\", \"delete\"].includes(method)) {\n    _option.params = data;\n  }\n\n  return service(_option);\n};\n\nexport const useAjax = (option) => {\n  const [data, setData] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [isCatch, setIsCatch] = useState(false);\n  isLoading &&\n    ajax(option)\n      .then((res) => {\n        setData(res);\n      })\n      .catch((err) => {\n        setData(err);\n        setIsCatch(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  return {\n    data,\n    isLoading,\n    isCatch,\n  };\n};\n\nexport const useAjaxSync = (initUrl) => {\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isCatch, setIsCatch] = useState(false);\n  return (option) => {\n    const { url } = option;\n    const u = url || initUrl;\n    ajax({ ...option, url: u })\n      .then((res) => {\n        setData(res);\n      })\n      .catch((err) => {\n        setData(err);\n        setIsCatch(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n    return {\n      data,\n      isLoading,\n      isCatch,\n    };\n  };\n};\n","import { ajax } from \"request/index\";\n// login\nexport const adminUrl = (data) =>\n  ajax({\n    url: \"/config/adminUrl\",\n    method: \"get\",\n    data,\n  });\nexport const userInfo = (data) =>\n  ajax({\n    url: \"/user/me\",\n    method: \"get\",\n    data,\n  });\n// user 用户信息\nexport const userBase = (data) =>\n  ajax({\n    url: \"/user/detail\",\n    method: \"get\",\n    data,\n  });\n// home\n// 最近的一场考试\nexport const nextExam = (data) =>\n  ajax({\n    url: \"/examStatistic/nextSchedule\",\n    method: \"get\",\n    data,\n  });\n// 已报名的培训\nexport const signTrain = (data) =>\n  ajax({\n    url: `/learnStatistic/personnelCourse`,\n    method: \"get\",\n  });\n// 已报名的考试\nexport const signExam = (data) =>\n  ajax({\n    url: `/examStatistic/examScheduleCount`,\n    method: \"get\",\n  });\n// 我的证书\n\nexport const getCertificateInfo = (data) =>\n  ajax({\n    url: `exam/personnel/paper/mock/getCertificateInfo`,\n    method: \"get\",\n    data,\n  });\n// train\n// 课程\nexport const train = (data) =>\n  ajax({\n    url: \"/courseSign/personnel\",\n    method: \"get\",\n    data,\n  });\n\nexport const trainDetail = (data) =>\n  ajax({\n    url: `/courseSign/personnel/${data.id}`,\n    method: \"get\",\n  });\n\nexport const trainDetailVideo = (data) =>\n  ajax({\n    url: `/video/personnel/${data.id}/${data.videoId}`,\n    method: \"get\",\n  });\n\nexport const trainDetailVideoUrl = (data) =>\n  ajax({\n    url: `/video/playInfo/${data.vid}`,\n    method: \"get\",\n  });\n// exam\n// 考试\nexport const exam = (data) =>\n  ajax({\n    url: `/examSign/personnel`,\n    method: \"get\",\n  });\n\n// 获取模拟卷列表\nexport const getExamPaper = (data) =>\n  ajax({\n    url: `/exam/personnel/paper/mock/list/${data.id}`,\n    method: \"get\",\n  });\n\n// 获取模拟卷详情\nexport const getExamPaperDetail = (data) =>\n  ajax({\n    url: `/exam/personnel/paper/mock/${data.id}`,\n    method: \"get\",\n  });\n\n// 获取模拟卷答案\nexport const getExamPaperAnswerDetail = (data) =>\n  ajax({\n    url: `/exam/personnel/paper/mock/answer/${data.id}`,\n    method: \"get\",\n  });\n\nexport default {\n  adminUrl,\n  userInfo,\n  // user\n  userBase,\n  // home\n  nextExam,\n  signTrain,\n  signExam,\n  getCertificateInfo,\n  // train\n  train,\n  trainDetail,\n  trainDetailVideo,\n  trainDetailVideoUrl,\n  // exam\n  exam,\n  getExamPaper,\n  getExamPaperDetail,\n  getExamPaperAnswerDetail,\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport Services from \"services/index\";\n\nexport function createQuery(defaultOptions) {\n  const getKey = (variables) => {\n    const { queryKey } = defaultOptions;\n    const key = [\n      ...(typeof queryKey === \"function\" ? queryKey() : queryKey),\n      ...(variables ? [JSON.parse(JSON.stringify(variables))] : []),\n    ];\n    return key;\n  };\n\n  const Query = (options) => {\n    const { queryFn, variables, ...mergedOptions } = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    const apis = Services;\n    return useQuery({\n      queryKey: getKey(variables),\n      queryFn: (context) => queryFn({ ...context, apis, variables }),\n      ...mergedOptions,\n    });\n  };\n\n  Query.select = (select) => {\n    return (options) => {\n      const mergedOptions = { ...defaultOptions, ...options, select };\n\n      return Query(mergedOptions);\n    };\n  };\n\n  Query.getKey = getKey;\n\n  return Query;\n}\n","import { createQuery } from \"request/create-query\";\nexport const useAdminUrl = createQuery({\n  queryKey: [\"adminUrl\"],\n  queryFn: ({ apis }) => apis.adminUrl(),\n});\nexport const useUserInfo = createQuery({\n  queryKey: [\"userInfo\"],\n  queryFn: ({ apis }) => apis.userInfo(),\n});\n// user userBase\nexport const userUserBase = createQuery({\n  queryKey: [\"userBase\"],\n  queryFn: ({ apis }) => apis.userBase(),\n}).select((data) => {\n  return data.data;\n});\n// home\nexport const useNextExam = createQuery({\n  queryKey: [\"nextExam\"],\n  queryFn: ({ apis }) => apis.nextExam(),\n}).select((data) => {\n  return data.data;\n});\nexport const useSignTrain = createQuery({\n  queryKey: [\"signTrain\"],\n  queryFn: ({ apis }) => apis.signTrain(),\n});\nexport const useSignExam = createQuery({\n  queryKey: [\"signExam\"],\n  queryFn: ({ apis }) => apis.signExam(),\n});\n\nexport const useCertificateInfo = createQuery({\n  queryKey: [\"certificateInfo\"],\n  queryFn: ({ apis,variables }) => apis.getCertificateInfo(variables),\n});\n// train\nexport const useTrain = createQuery({\n  queryKey: [\"train\"],\n  queryFn: ({ apis }) => apis.train(),\n});\n\nexport const useTrainDetail = createQuery({\n  queryKey: [\"trainDetail\"],\n  queryFn: ({ apis, variables }) => apis.trainDetail(variables),\n});\n\nexport const useTrainDetailVideo = createQuery({\n  queryKey: [\"trainDetailVideo\"],\n  queryFn: ({ apis, variables }) => apis.trainDetailVideo(variables),\n});\n\nexport const useTrainDetailVideoUrl = createQuery({\n  queryKey: [\"trainDetailVideoUrl\"],\n  queryFn: ({ apis, variables }) => apis.trainDetailVideoUrl(variables),\n});\n\nexport const useGetVideoUrl = useTrainDetailVideoUrl.select((data) => {\n  const { code, playInfo } = data.data;\n  const { playURL } = playInfo.playInfoList[0];\n  const _playURL = `${playURL}?MtsHlsUriToken=${code}`;\n  return _playURL;\n});\n\n// exam\n\nexport const useExam = createQuery({\n  queryKey: [\"exam\"],\n  queryFn: ({ apis }) => apis.exam(),\n});\n\nexport const useExamPaper = createQuery({\n  queryKey: [\"examPaper\"],\n  queryFn: ({ apis, variables }) => apis.getExamPaper(variables),\n});\n\nexport const useExamPaperDetail = createQuery({\n  queryKey: [\"examPaperDetail\"],\n  queryFn: ({ apis, variables }) => apis.getExamPaperDetail(variables),\n});\n\nexport const useExamPaperAnswerDetail = createQuery({\n  queryKey: [\"examPaperDetail\"],\n  queryFn: ({ apis, variables }) => apis.getExamPaperAnswerDetail(variables),\n});\n"],"names":["currentQuestion","setCurrentQuestion","handleSetCurrentAnswer","answer","read","questionId","no","label","examQuestionTypeResponse","questionItemList","answers","prevId","nextId","useState","initId","setInitId","reId","setReId","currentAnswer","setCurrentAnswer","handleChange","e","i","check","v","target","value","_answer","push","_i","indexOf","splice","returnChecked","id","includes","useEffect","a","downKey","c","keyCode","document","addEventListener","removeEventListener","sx","position","Object","keys","length","padding","gutterBottom","variant","type","onChange","map","el","control","checked","disabled","content","width","top","onClick","color","filter","countdown","initTime","setInitTime","time","setTime","h","Math","floor","m","s","T","setTimeout","display","alignItems","marginBottom","lineHeight","fontSize","createPaper","data","paper","initAnswers","paperIndex","children","topic","createTopic","initPaper","createChildIds","initTopicEnum","createTopicEnum","index","selected","subQuestionList","number","_expanded","_selected","questionIds","returnChildIds","ids","list","flatPaper","json","prev","next","obj","child","expanded","setDefaultExpanded","console","log","amount","key","right","_a","sort","b","_s","isEqual","height","overflow","defaultCollapseIcon","defaultExpandIcon","onNodeSelect","onNodeToggle","nodeId","create","justifyContent","p","size","textOverflow","whiteSpace","service","axios","baseURL","process","timeout","interceptors","request","use","config","store","headers","error","Promise","reject","response","res","msg","status","NoticeRef","open","message","logout","ajax","option","_option","method","responseType","params","useAjax","setData","isLoading","setIsLoading","isCatch","setIsCatch","then","catch","err","finally","getCertificateInfo","url","adminUrl","userInfo","userBase","nextExam","signTrain","signExam","train","trainDetail","trainDetailVideo","videoId","trainDetailVideoUrl","vid","exam","getExamPaper","getExamPaperDetail","getExamPaperAnswerDetail","createQuery","defaultOptions","getKey","variables","queryKey","JSON","parse","stringify","Query","options","queryFn","mergedOptions","apis","Services","useQuery","context","select","userUserBase","useNextExam","useSignTrain","useSignExam","useTrain","useTrainDetail","useTrainDetailVideo","useExam","code","playURL","playInfo","playInfoList","useExamPaperDetail","useExamPaperAnswerDetail"],"sourceRoot":""}